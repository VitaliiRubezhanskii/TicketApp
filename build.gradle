buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ua.rubezhanskii'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


ext {
    springCloudVersion = 'Finchley.SR2'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('org.springframework.boot:spring-boot-starter-aop')
//    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
//    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    implementation('org.springframework.boot:spring-boot-starter-data-neo4j')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
//    implementation('org.springframework.boot:spring-boot-starter-data-redis-reactive')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-web')
//    implementation('org.springframework.boot:spring-boot-starter-webflux')
//    implementation('org.springframework.boot:spring-boot-starter-websocket')
//    implementation('org.apache.kafka:kafka-streams')
//    implementation('org.liquibase:liquibase-core')
//    implementation('org.springframework.cloud:spring-cloud-bus')
//    implementation('org.springframework.cloud:spring-cloud-config-server')
//    implementation('org.springframework.cloud:spring-cloud-starter-config')
//    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine-stream')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
//    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
//    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
//    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
//    implementation('org.springframework.cloud:spring-cloud-stream')
//    implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
//    implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka-streams')
//    implementation('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
//    implementation('org.springframework.cloud:spring-cloud-stream-reactive')
//    implementation('org.springframework.kafka:spring-kafka')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('com.h2database:h2')
    runtimeOnly('mysql:mysql-connector-java')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
    testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
